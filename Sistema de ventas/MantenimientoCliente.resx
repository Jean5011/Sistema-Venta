<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="errorProvider1.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iNoejJsA9JEAAAAASUVORK5CYII=
</value>
  </data>
</root>